{"version":3,"file":"PureTaskList-d62c750c.js","sources":["../../src/components/PureTaskList.vue"],"sourcesContent":["\r\n<template>\r\n    <div class=\"list-items\">\r\n      <template v-if=\"loading\">\r\n        <div v-for=\"n in 6\" :key=\"n\" class=\"loading-item\">\r\n          <span class=\"glow-checkbox\" />\r\n          <span class=\"glow-text\">\r\n            <span>Loading</span> <span>cool</span> <span>state</span>\r\n          </span>\r\n        </div>\r\n      </template>\r\n  \r\n      <div v-else-if=\"isEmpty\" class=\"list-items\">\r\n        <div class=\"wrapper-message\">\r\n          <span class=\"icon-check\" />\r\n          <p class=\"title-message\">You have no tasks</p>\r\n          <p class=\"subtitle-message\">Sit back and relax</p>\r\n        </div>\r\n      </div>\r\n  \r\n      <template v-else>\r\n        <Task\r\n          v-for=\"task in tasksInOrder\"\r\n          :key=\"task.id\"\r\n          :task=\"task\"\r\n          @archive-task=\"onArchiveTask\"\r\n          @pin-task=\"onPinTask\"\r\n        />\r\n      </template>\r\n    </div>\r\n  </template>\r\n  <script>\r\n  import Task from './Task.vue';\r\n  import { reactive, computed } from 'vue';\r\n  \r\n  export default {\r\n    name: 'PureTaskList',\r\n    components: { Task },\r\n    props: {\r\n      tasks: { type: Array, required: true, default: () => [] },\r\n      loading: { type: Boolean, default: false },\r\n    },\r\n    emits: ['archive-task', 'pin-task'],\r\n  \r\n    setup(props, { emit }) {\r\n      props = reactive(props);\r\n      return {\r\n        isEmpty: computed(() => props.tasks.length === 0),\r\n        tasksInOrder: computed(() => {\r\n          return [\r\n            ...props.tasks.filter((t) => t.state === 'TASK_PINNED'),\r\n            ...props.tasks.filter((t) => t.state !== 'TASK_PINNED'),\r\n          ];\r\n        }),\r\n        /**\r\n         * Event handler for archiving tasks\r\n         */\r\n        onArchiveTask(taskId) {\r\n          emit('archive-task', taskId);\r\n        },\r\n        /**\r\n         * Event handler for pinning tasks\r\n         */\r\n        onPinTask(taskId) {\r\n          emit('pin-task', taskId);\r\n        },\r\n      };\r\n    },\r\n  };\r\n  </script>\r\n  "],"names":["_sfc_main","Task","props","emit","reactive","computed","t","taskId","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_6","_openBlock","_createElementBlock","$props","_Fragment","_renderList","n","$setup","_hoisted_5","_hoisted_7","task","_createBlock","_component_Task"],"mappings":"0JAmCE,MAAKA,EAAU,CACb,KAAM,eACN,WAAY,CAAE,KAAAC,CAAM,EACpB,MAAO,CACL,MAAO,CAAE,KAAM,MAAO,SAAU,GAAM,QAAS,IAAM,EAAI,EACzD,QAAS,CAAE,KAAM,QAAS,QAAS,EAAO,CAC3C,EACD,MAAO,CAAC,eAAgB,UAAU,EAElC,MAAMC,EAAO,CAAE,KAAAC,GAAQ,CACrB,OAAAD,EAAQE,EAASF,CAAK,EACf,CACL,QAASG,EAAS,IAAMH,EAAM,MAAM,SAAW,CAAC,EAChD,aAAcG,EAAS,IACd,CACL,GAAGH,EAAM,MAAM,OAAQI,GAAMA,EAAE,QAAU,aAAa,EACtD,GAAGJ,EAAM,MAAM,OAAQI,GAAMA,EAAE,QAAU,aAAa,EAEzD,EAID,cAAcC,EAAQ,CACpBJ,EAAK,eAAgBI,CAAM,CAC5B,EAID,UAAUA,EAAQ,CAChBJ,EAAK,WAAYI,CAAM,CACxB,EAEJ,GAjEIC,EAAA,CAAA,MAAM,YAAY,IAGjBC,EAA8B,OAAA,CAAxB,MAAM,iBAAe,KAAA,EAAA,IAC3BA,EAEO,OAAA,CAFD,MAAM,WAAW,EAAA,CACrBA,EAAoB,YAAd,SAAO,MAAQA,EAAiB,YAAX,MAAI,MAAQA,EAAkB,YAAZ,OAAK,UAFpDC,EACAC,YAMqB,MAAM,gBAC7BF,EAIM,MAAA,CAJD,MAAM,iBAAiB,EAAA,CAC1BA,EAA2B,OAAA,CAArB,MAAM,YAAY,CAAA,EACxBA,EAA8C,IAA3C,CAAA,MAAM,eAAe,EAAC,mBAAiB,EAC1CA,EAAkD,IAA/C,CAAA,MAAM,kBAAkB,EAAC,oBAAkB,UAHhDG,6CAXJ,OAAAC,EAAA,EAAAC,EA2BM,MA3BNN,EA2BM,CA1BYO,EAAO,aACrBD,EAKME,EAAA,CAAA,IAAA,CAAA,EAAAC,EALW,EAALC,GAAZT,EAKM,MAAA,CALe,IAAKS,EAAG,MAAM,yBAQrBC,EAAO,SAAvBN,EAAA,EAAAC,EAMM,MANNM,EAMMC,CAAA,UAGJP,EAMEE,EAAA,CAAA,IAAA,CAAA,EAAAC,EALeE,EAAY,aAApBG,QADTC,EAMEC,EAAA,CAJC,IAAKF,EAAK,GACV,KAAMA,EACN,cAAcH,EAAa,cAC3B,UAAUA,EAAS"}